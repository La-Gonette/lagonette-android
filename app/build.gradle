apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("app/keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 26
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "org.lagonette.app"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 2
        versionName "1.0.0-alpha2"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/build/schemas".toString()]
            }
        }

        jackOptions {
            enabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"

            buildConfigField "boolean", "LOG_SQL", "true"
        }
        prod.initWith(buildTypes.release)
        prod {
            applicationIdSuffix ".prod"
            versionNameSuffix "-prod"

            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release // TODO really usefull ?

            buildConfigField "boolean", "LOG_SQL", "true"
        }
        release {
            minifyEnabled true
            shrinkResources false //TODO
            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "LOG_SQL", "false"
        }
    }
}

repositories {
    maven {
        url 'https://maven.google.com'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'

    implementation 'com.google.android.gms:play-services-maps:10.2.6'
    implementation 'com.google.android.gms:play-services-location:10.2.6'
    implementation 'com.google.firebase:firebase-crash:10.2.6'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.google.code.gson:gson:2.8.0'

    //For Lifecycles, LiveData, and ViewModel
    implementation 'android.arch.lifecycle:runtime:1.0.0'
    implementation 'android.arch.lifecycle:extensions:1.0.0-alpha9-1'
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha9-1"

    //For Room
    implementation 'android.arch.persistence.room:runtime:1.0.0-alpha9-1'
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-alpha9-1"

    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'

    implementation 'com.github.bumptech.glide:glide:3.7.0'
}

apply plugin: 'com.google.gms.google-services'
